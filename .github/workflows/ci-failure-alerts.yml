name: CI Failure Alerts

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  open-or-update-alert:
    name: Record failure
    if: ${{ github.event.workflow_run.conclusion == 'failure' || github.event.workflow_run.conclusion == 'timed_out' || github.event.workflow_run.conclusion == 'cancelled' }}
    runs-on: ubuntu-latest
    steps:
      - name: Upsert alert issue
        uses: actions/github-script@v7
        with:
          script: |
            const run = context.payload.workflow_run;
            const {owner, repo} = context.repo;
            const title = 'CI failure alerts';
            const alertBody = [
              '### CI failure detected',
              `- **Workflow**: ${run.name}`,
              `- **Run number**: ${run.run_number}`,
              `- **Conclusion**: ${run.conclusion}`,
              `- **Branch**: ${run.head_branch || 'n/a'}`,
              `- **Commit**: ${run.head_sha}`,
              `- **Actor**: ${(run.actor && run.actor.login) || (run.triggering_actor && run.triggering_actor.login) || 'n/a'}`,
              `- **View run**: ${run.html_url}`,
            ].join('\n');

            const issues = await github.paginate(github.rest.issues.listForRepo, {
              owner,
              repo,
              state: 'open',
              per_page: 100,
            });
            const existing = issues.find(issue => issue.title === title);

            const ensureLabel = async (labelName) => {
              try {
                await github.rest.issues.getLabel({ owner, repo, name: labelName });
              } catch (error) {
                if (error.status === 404) {
                  await github.rest.issues.createLabel({
                    owner,
                    repo,
                    name: labelName,
                    color: 'B60205',
                    description: 'Automatic CI failure alerts',
                  });
                } else {
                  throw error;
                }
              }
            };

            const label = 'ci-alert';
            await ensureLabel(label);

            if (existing) {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: existing.number,
                body: alertBody,
              });
            } else {
              await github.rest.issues.create({
                owner,
                repo,
                title,
                body: `${alertBody}\n\nThis issue collects CI failures automatically. Close it once the pipeline is healthy again.`,
                labels: [label],
              });
            }

  resolve-alert:
    name: Resolve alert
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Close existing alert issue
        uses: actions/github-script@v7
        with:
          script: |
            const run = context.payload.workflow_run;
            const {owner, repo} = context.repo;
            const title = 'CI failure alerts';
            const issues = await github.paginate(github.rest.issues.listForRepo, {
              owner,
              repo,
              state: 'open',
              per_page: 100,
            });
            const existing = issues.find(issue => issue.title === title);
            if (!existing) {
              core.info('No open CI alert issue found.');
              return;
            }
            const resolutionBody = [
              '### CI recovered',
              `- **Workflow**: ${run.name}`,
              `- **Run number**: ${run.run_number}`,
              `- **Branch**: ${run.head_branch || 'n/a'}`,
              `- **Commit**: ${run.head_sha}`,
              `- **View run**: ${run.html_url}`,
            ].join('\n');
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: existing.number,
              body: `${resolutionBody}\n\nClosing alert.`,
            });
            await github.rest.issues.update({
              owner,
              repo,
              issue_number: existing.number,
              state: 'closed',
            });
