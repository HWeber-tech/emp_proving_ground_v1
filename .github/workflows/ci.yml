name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Unit tests (Ubuntu, Python 3.11)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests (current scope)
        env:
          EMP_USE_MOCK_FIX: '1'
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python -m pytest -q
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Unit tests (Python ${{ matrix.python }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest simplefix prometheus_client

      - name: Run tests
        shell: bash
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python scripts/run_tests.py -q

  quality:
    name: Lint/Type/Coverage (Ubuntu)
    runs-on: ubuntu-latest
    env:
      RUN_MODE: paper
      EMP_ENVIRONMENT: demo
      EMP_TIER: tier_0
      CONFIRM_LIVE: 'false'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install ruff mypy pytest pytest-cov simplefix prometheus_client

      - name: Lint with ruff
        run: ruff check .

      - name: Type check with mypy
        run: mypy --ignore-missing-imports src

      - name: Run tests with coverage
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest --cov=src --cov-report=term --cov-fail-under=70 -q

  backtest:
    name: Offline Backtest Smoke (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Prepare fixtures
        run: |
          mkdir -p data/md_capture data/macro docs/reports/backtests
          printf '{"symbol":"EURUSD","timestamp":"2025-01-01T00:00:00","bids":[[1.1,1000000]],"asks":[[1.1002,1200000]]}\n' > data/md_capture/capture.jsonl
          printf '{"timestamp":"2025-01-01T00:30:00","event":"CPI","currency":"EUR"}\n' > data/macro/calendar.jsonl
      - name: Run backtest
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python scripts/backtest_report.py --file data/md_capture/capture.jsonl --macro-file data/macro/calendar.jsonl --out-dir docs/reports/backtests
          python scripts/generate_html_report.py --csv docs/reports/backtests/why_features.csv --out docs/reports/backtests/WHY_FEATURES.html
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backtest-report
          path: docs/reports/backtests
