from typing import Iterable

class Tensor: ...

def tensor(data: object, dtype: object | None = ..., device: object | None = ...) -> Tensor: ...
def from_numpy(a: object) -> Tensor: ...
def no_grad() -> object: ...
def manual_seed(seed: int) -> None: ...
def set_num_threads(n: int) -> None: ...

# Expose submodules used in the codebase
from . import nn as nn
from . import optim as optim
