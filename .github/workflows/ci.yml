name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Unit tests (Python ${{ matrix.python }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest simplefix prometheus_client

      - name: Run tests
        shell: bash
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python scripts/run_tests.py -q

name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Default runtime environment variables used for tests and application startup
      RUN_MODE: paper
      EMP_ENVIRONMENT: demo
      EMP_TIER: tier_0
      CONFIRM_LIVE: 'false'

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install application dependencies
        pip install -r requirements.txt
        # Install development tools
        pip install ruff mypy pytest pytest-cov

    - name: Lint with ruff
      run: |
        # Run ruff to enforce code quality; fail on any violations
        ruff check .

    - name: Type check with mypy
      run: |
        # Run mypy on the src directory; ignore missing imports to avoid thirdâ€‘party stubs issues
        mypy --ignore-missing-imports src

    - name: Run tests with coverage
      run: |
        # Execute the test suite with coverage enabled
        pytest --cov=src --cov-report=term --cov-fail-under=70 -q
