{
  "scan_date": "2025-07-20T16:27:36.603258",
  "total_stubs": 96,
  "stub_breakdown": {
    "pass": 0,
    "not_implemented": 0,
    "mock_object": 96,
    "placeholder": 0
  },
  "criticality_breakdown": {
    "critical": 0,
    "high": 0,
    "medium": 96,
    "low": 0
  },
  "estimated_effort": 384,
  "stubs": [
    {
      "file_path": "d:/EMP\\archive\\analysis\\advanced_analytics.py",
      "line_number": 515,
      "function_name": "_fetch_news",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_news = ["
    },
    {
      "file_path": "d:/EMP\\archive\\analysis\\advanced_analytics.py",
      "line_number": 540,
      "function_name": "_analyze_text_sentiment",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: return mock_news"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\cleanup_script.py",
      "line_number": 134,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: \"MOCK_REPLACEMENT_PLAN.md\","
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\cleanup_script.py",
      "line_number": 135,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: \"MOCK_INVENTORY.md\","
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\cleanup_script.py",
      "line_number": 277,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: - [Mock Replacement Plan](docs/reports/MOCK_REPLACEMENT_PLAN.md)"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\main.py",
      "line_number": 229,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_market_state = MarketState("
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\archive\\analysis\\advanced_analytics.py",
      "line_number": 515,
      "function_name": "_fetch_news",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_news = ["
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\archive\\analysis\\advanced_analytics.py",
      "line_number": 540,
      "function_name": "_analyze_text_sentiment",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: return mock_news"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\archive\\sensory\\legacy_dimensions\\how_engine.py",
      "line_number": 85,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: class MockBookProvider:"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\archive\\sensory\\legacy_dimensions\\how_engine.py",
      "line_number": 477,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: self.mock_book_provider = MockBookProvider(instrument_meta.symbol)"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\archive\\sensory\\legacy_dimensions\\how_engine.py",
      "line_number": 477,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: self.mock_book_provider = MockBookProvider(instrument_meta.symbol)"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\archive\\sensory\\legacy_dimensions\\how_engine.py",
      "line_number": 503,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: book_snapshot = self.mock_book_provider.generate_book_snapshot(market_data)"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\advanced_risk_manager.py",
      "line_number": 20,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: from src.trading.mock_ctrader_interface import MarketData, Position, Order"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\advanced_risk_manager.py",
      "line_number": 650,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: from src.trading.mock_ctrader_interface import Position, OrderSide"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\live_trading_executor.py",
      "line_number": 18,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: from .mock_ctrader_interface import ("
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 98,
      "function_name": "__init__",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: class MockCTraderClient:"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 130,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_response = {"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 136,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_response = {"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 141,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_response = {"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 148,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: await self.on_message(mock_response)"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 151,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: class MockCTraderInterface:"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 201,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: self.client = MockCTraderClient(self.config.host, self.config.port, self._on_message_received)"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 250,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: self._generate_mock_market_data(symbol_id, symbol_name)"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 420,
      "function_name": "_generate_mock_market_data",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: def _generate_mock_market_data(self, symbol_id: int, symbol_name: str):"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 502,
      "function_name": "exchange_code_for_token",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_tokens = {"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 503,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: \"access_token\": \"mock_access_token_12345\","
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 504,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: \"refresh_token\": \"mock_refresh_token_67890\","
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 510,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: return mock_tokens"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 520,
      "function_name": "refresh_token",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_tokens = {"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 521,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: \"access_token\": \"mock_refreshed_access_token_12345\","
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 528,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: return mock_tokens"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 538,
      "function_name": "get_trading_accounts",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_accounts = ["
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 548,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: return mock_accounts"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 556,
      "function_name": "main",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: CTraderInterface = MockCTraderInterface"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\mock_ctrader_interface.py",
      "line_number": 576,
      "function_name": "on_price_update",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: interface = MockCTraderInterface(config)"
    },
    {
      "file_path": "d:/EMP\\archive\\cleanup_2025_07_20\\legacy_backup\\backup_before_cleanup\\src\\trading\\__init__.py",
      "line_number": 31,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: from .mock_ctrader_interface import ("
    },
    {
      "file_path": "d:/EMP\\archive\\sensory\\legacy_dimensions\\how_engine.py",
      "line_number": 85,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: class MockBookProvider:"
    },
    {
      "file_path": "d:/EMP\\archive\\sensory\\legacy_dimensions\\how_engine.py",
      "line_number": 477,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: self.mock_book_provider = MockBookProvider(instrument_meta.symbol)"
    },
    {
      "file_path": "d:/EMP\\archive\\sensory\\legacy_dimensions\\how_engine.py",
      "line_number": 477,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: self.mock_book_provider = MockBookProvider(instrument_meta.symbol)"
    },
    {
      "file_path": "d:/EMP\\archive\\sensory\\legacy_dimensions\\how_engine.py",
      "line_number": 503,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: book_snapshot = self.mock_book_provider.generate_book_snapshot(market_data)"
    },
    {
      "file_path": "d:/EMP\\src\\data.py",
      "line_number": 53,
      "function_name": "__init__",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: class MockDataGenerator:"
    },
    {
      "file_path": "d:/EMP\\src\\data.py",
      "line_number": 137,
      "function_name": "__init__",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: self.mock_generator = MockDataGenerator(config)"
    },
    {
      "file_path": "d:/EMP\\src\\data.py",
      "line_number": 137,
      "function_name": "__init__",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: self.mock_generator = MockDataGenerator(config)"
    },
    {
      "file_path": "d:/EMP\\src\\data.py",
      "line_number": 190,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: data = self.mock_generator.generate_market_data(symbol)"
    },
    {
      "file_path": "d:/EMP\\src\\data.py",
      "line_number": 210,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: data = self.mock_generator.generate_market_data(symbol)"
    },
    {
      "file_path": "d:/EMP\\src\\data.py",
      "line_number": 236,
      "function_name": "_get_real_data",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: return self.mock_generator.generate_market_data(symbol)"
    },
    {
      "file_path": "d:/EMP\\src\\data.py",
      "line_number": 267,
      "function_name": "get_historical_data",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: return self.mock_generator.generate_historical_data(symbol, days)"
    },
    {
      "file_path": "d:/EMP\\src\\data.py",
      "line_number": 272,
      "function_name": "get_economic_data",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: return self.mock_generator.generate_historical_data(symbol, days)"
    },
    {
      "file_path": "d:/EMP\\src\\data.py",
      "line_number": 341,
      "function_name": "test_data_manager",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_config = DataConfig(mode=\"mock\")"
    },
    {
      "file_path": "d:/EMP\\src\\data.py",
      "line_number": 342,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_manager = DataManager(mock_config)"
    },
    {
      "file_path": "d:/EMP\\src\\data.py",
      "line_number": 345,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_data = await mock_manager.get_market_data(\"EURUSD\")"
    },
    {
      "file_path": "d:/EMP\\src\\data.py",
      "line_number": 346,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: print(f\"Mock data: {mock_data}\")"
    },
    {
      "file_path": "d:/EMP\\src\\data.py",
      "line_number": 371,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: historical_data = await mock_manager.get_historical_data(\"EURUSD\", days=1)"
    },
    {
      "file_path": "d:/EMP\\src\\__init__.py",
      "line_number": 21,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: from .data import DataManager, DataConfig, MockDataGenerator, DataProvider"
    },
    {
      "file_path": "d:/EMP\\src\\__init__.py",
      "line_number": 50,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: \"MockDataGenerator\","
    },
    {
      "file_path": "d:/EMP\\src\\data_integration\\real_data_integration.py",
      "line_number": 508,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: return self._generate_mock_data(symbol)"
    },
    {
      "file_path": "d:/EMP\\src\\data_integration\\real_data_integration.py",
      "line_number": 651,
      "function_name": "_generate_mock_data",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: def _generate_mock_data(self, symbol: str) -> MarketData:"
    },
    {
      "file_path": "d:/EMP\\src\\sensory\\organs\\economic_organ.py",
      "line_number": 28,
      "function_name": "process",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: macro_trend, macro_strength = self._calculate_mock_economic_signals(market_data)"
    },
    {
      "file_path": "d:/EMP\\src\\sensory\\organs\\economic_organ.py",
      "line_number": 51,
      "function_name": "_calculate_mock_economic_signals",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: def _calculate_mock_economic_signals(self, market_data: MarketData) -> tuple:"
    },
    {
      "file_path": "d:/EMP\\src\\sensory\\organs\\news_organ.py",
      "line_number": 30,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: sentiment_score = self._calculate_mock_sentiment(market_data)"
    },
    {
      "file_path": "d:/EMP\\src\\sensory\\organs\\news_organ.py",
      "line_number": 54,
      "function_name": "_calculate_mock_sentiment",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: def _calculate_mock_sentiment(self, market_data: MarketData) -> float:"
    },
    {
      "file_path": "d:/EMP\\src\\sensory\\organs\\sentiment_organ.py",
      "line_number": 28,
      "function_name": "process",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: sentiment_score = self._calculate_mock_sentiment(market_data)"
    },
    {
      "file_path": "d:/EMP\\src\\sensory\\organs\\sentiment_organ.py",
      "line_number": 51,
      "function_name": "_calculate_mock_sentiment",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: def _calculate_mock_sentiment(self, market_data: MarketData) -> float:"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\trading_manager.py",
      "line_number": 19,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: class MockPortfolioMonitor:"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\trading_manager.py",
      "line_number": 100,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: self.portfolio_monitor = MockPortfolioMonitor(initial_equity)"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\execution\\live_trading_executor.py",
      "line_number": 18,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: from .mock_ctrader_interface import ("
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 98,
      "function_name": "__init__",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: class MockCTraderClient:"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 130,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_response = {"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 136,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_response = {"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 141,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_response = {"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 148,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: await self.on_message(mock_response)"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 151,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: class MockCTraderInterface:"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 201,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: self.client = MockCTraderClient(self.config.host, self.config.port, self._on_message_received)"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 250,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: self._generate_mock_market_data(symbol_id, symbol_name)"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 420,
      "function_name": "_generate_mock_market_data",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: def _generate_mock_market_data(self, symbol_id: int, symbol_name: str):"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 502,
      "function_name": "exchange_code_for_token",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_tokens = {"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 503,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: \"access_token\": \"mock_access_token_12345\","
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 504,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: \"refresh_token\": \"mock_refresh_token_67890\","
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 510,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: return mock_tokens"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 520,
      "function_name": "refresh_token",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_tokens = {"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 521,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: \"access_token\": \"mock_refreshed_access_token_12345\","
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 528,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: return mock_tokens"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 538,
      "function_name": "get_trading_accounts",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: mock_accounts = ["
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 548,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: return mock_accounts"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 556,
      "function_name": "main",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: CTraderInterface = MockCTraderInterface"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\integration\\mock_ctrader_interface.py",
      "line_number": 576,
      "function_name": "on_price_update",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: interface = MockCTraderInterface(config)"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\risk\\advanced_risk_manager.py",
      "line_number": 20,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: from src.trading.mock_ctrader_interface import MarketData, Position, Order"
    },
    {
      "file_path": "d:/EMP\\src\\trading\\risk\\advanced_risk_manager.py",
      "line_number": 650,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: from src.trading.mock_ctrader_interface import Position, OrderSide"
    },
    {
      "file_path": "d:/EMP\\tools\\stub_detector.py",
      "line_number": 3,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: Identifies all stub implementations, mocks, and placeholders in the codebase"
    },
    {
      "file_path": "d:/EMP\\tools\\stub_detector.py",
      "line_number": 36,
      "function_name": "__init__",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: \"\"\"Scan entire repository for stubs and mocks\"\"\""
    },
    {
      "file_path": "d:/EMP\\tools\\stub_detector.py",
      "line_number": 68,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: stubs.extend(self._find_mock_objects(content, file_path))"
    },
    {
      "file_path": "d:/EMP\\tools\\stub_detector.py",
      "line_number": 131,
      "function_name": "_find_mock_objects",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: def _find_mock_objects(self, content: str, file_path: str) -> List[StubLocation]:"
    },
    {
      "file_path": "d:/EMP\\tools\\stub_detector.py",
      "line_number": 140,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: r'MagicMock',"
    },
    {
      "file_path": "d:/EMP\\tools\\stub_detector.py",
      "line_number": 151,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: stub_type='mock_object',"
    },
    {
      "file_path": "d:/EMP\\tools\\stub_detector.py",
      "line_number": 256,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: 'mock_object': len([s for s in stubs if s.stub_type == 'mock_object']),"
    },
    {
      "file_path": "d:/EMP\\tools\\stub_detector.py",
      "line_number": 276,
      "function_name": "unknown",
      "class_name": "",
      "stub_type": "mock_object",
      "criticality": "medium",
      "complexity_estimate": 4,
      "description": "Found mock object: print(f\"Found {len(stubs)} stubs/mocks\")"
    }
  ]
}